syntax="proto3";

package grpcserver;

option go_package="mypreciouskeeper/grpcserver";

//Auth service for managing account creation and login
service Auth {
    //Register new user
    rpc Register (RegisterRequest) returns (RegisterResponse);
    //Login authorize user and returns auth token if success
    rpc Login(LoginRequest) returns (LoginResponse);
}

//User Register object
message RegisterRequest{
    string email = 1; //User email (login) for register
    string pass = 2; //User Password
} 

//Register respnse object with user id and error message 
message RegisterResponse {
    int64 user_id = 1; //ID of registered user
    string error = 2; //Any error message happened during registration
}

message LoginRequest {
    string email = 1; //User email for login
    string pass = 2;  //User pass
}

message LoginResponse{
    string token = 1; //Auth token after success login
    string error = 2; //Any error happened during login
}


//Asset service for work with user's asset - create, get and list up 
service Asset{
    //Create new asset record
    rpc Create (CreateRequest) returns (CreateResponse);
    //Get asset 
    rpc Get(GetRequest) returns (GetResponse);
    //List up assets of current user
    rpc List(ListRequest) returns (ListResponse);
}

//Asset register object
message CreateRequest {
    string token = 1; //JWT auth token of Current user 
    string type = 2; //Asset type
    string sticker = 3; //Asset sticker -  desription tag
    bytes body = 4; //Asset body
}

message CreateResponse {
    int64 asset_id = 1; //ID of created asset
}

message GetRequest{
    string token = 1; //JWT auth token of current user
    int64 asset_id = 2; //ID of asset to request 
}

message GetResponse {
    int64 asset_id = 1;
    string type = 2; //Asset type
    string sticker = 3; //Asset sticker -  desription tag
    bytes body = 4; //Asset body 
}

message ListRequest{
    string token = 1; //token contains current user ID 
}

message ListResponse{
    message Asset {
        string type = 1; //Asset type
        string sticker = 2; //Asset sticker -  desription tag
        bytes body = 3; //Asset body
    }
    repeated Asset assets = 1;//Array of user's assets
}
